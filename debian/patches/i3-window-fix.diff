modal windows close when losing focus for i3 floating window mode
Index: regolith-control-center/shell/cc-window.c
===================================================================
--- regolith-control-center.orig/shell/cc-window.c
+++ regolith-control-center/shell/cc-window.c
@@ -31,6 +31,7 @@
 #include <gio/gio.h>
 #include <gio/gdesktopappinfo.h>
 #include <gtk/gtk.h>
+#include <gtk/gtkeventcontrollerfocus.h>
 #include <string.h>
 #include <time.h>
 
@@ -892,3 +893,19 @@ cc_window_set_search_item (CcWindow   *c
   gtk_editable_set_text (GTK_EDITABLE (center->search_entry), search);
   gtk_editable_set_position (GTK_EDITABLE (center->search_entry), -1);
 }
+
+static gboolean on_focus_out_event (GtkEventController *controller, GtkWindow *window)
+{
+  gtk_window_close(window);
+
+  return TRUE;
+}
+
+void close_on_lost_focus(GtkWindow * window)
+{
+  GtkEventController *controller;
+  controller = gtk_event_controller_focus_new ();
+
+  g_signal_connect (controller, "leave", G_CALLBACK (on_focus_out_event), window);
+  gtk_widget_add_controller (GTK_WIDGET (window), GTK_EVENT_CONTROLLER (controller));
+}
\ No newline at end of file
Index: regolith-control-center/shell/cc-window.h
===================================================================
--- regolith-control-center.orig/shell/cc-window.h
+++ regolith-control-center/shell/cc-window.h
@@ -36,4 +36,6 @@ CcWindow *cc_window_new (GtkApplication
 void cc_window_set_search_item (CcWindow *center,
                                 const char *search);
 
-G_END_DECLS
+void close_on_lost_focus(GtkWindow * window);
+
+G_END_DECLS
\ No newline at end of file
Index: regolith-control-center/panels/info-overview/cc-info-overview-panel.c
===================================================================
--- regolith-control-center.orig/panels/info-overview/cc-info-overview-panel.c
+++ regolith-control-center/panels/info-overview/cc-info-overview-panel.c
@@ -24,6 +24,7 @@
 
 #include "cc-hostname-entry.h"
 #include "shell/cc-object-storage.h"
+#include "shell/cc-window.h"
 
 #include "cc-info-overview-resources.h"
 #include "info-cleanup.h"
@@ -854,7 +855,7 @@ open_hostname_edit_dialog (CcInfoOvervie
   shell = cc_panel_get_shell (CC_PANEL (self));
   toplevel = GTK_WINDOW (cc_shell_get_toplevel (shell));
   gtk_window_set_transient_for (GTK_WINDOW (self->hostname_editor), toplevel);
-
+  close_on_lost_focus(GTK_WINDOW (self->hostname_editor));
   hostname = gtk_editable_get_text (GTK_EDITABLE (self->hostname_entry));
   gtk_editable_set_text (GTK_EDITABLE (self->device_name_entry), hostname);
   gtk_widget_grab_focus (GTK_WIDGET (self->device_name_entry));
Index: regolith-control-center/panels/color/cc-color-panel.c
===================================================================
--- regolith-control-center.orig/panels/color/cc-color-panel.c
+++ regolith-control-center/panels/color/cc-color-panel.c
@@ -25,6 +25,7 @@
 #include <gtk/gtk.h>
 #include <gdk/x11/gdkx.h>
 
+#include "shell/cc-window.h"
 #include "cc-color-calibrate.h"
 #include "cc-color-cell-renderer-text.h"
 #include "cc-color-panel.h"
@@ -890,7 +891,7 @@ gcm_prefs_profile_add_cb (CcColorPanel *
   /* show the dialog */
   gtk_window_set_transient_for (GTK_WINDOW (prefs->dialog_assign),
                                 GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (prefs))));
-
+  close_on_lost_focus(GTK_WINDOW (prefs->dialog_assign));
   gtk_widget_show (prefs->dialog_assign);
 }
 
Index: regolith-control-center/panels/datetime/cc-datetime-panel.c
===================================================================
--- regolith-control-center.orig/panels/datetime/cc-datetime-panel.c
+++ regolith-control-center/panels/datetime/cc-datetime-panel.c
@@ -19,6 +19,7 @@
  *
  */
 
+#include "shell/cc-window.h"
 #include "config.h"
 #include "cc-time-editor.h"
 #include "cc-datetime-panel.h"
@@ -732,6 +733,7 @@ run_dialog (CcDateTimePanel *self,
   parent = cc_shell_get_toplevel (cc_panel_get_shell (CC_PANEL (self)));
 
   gtk_window_set_transient_for (GTK_WINDOW (dialog), GTK_WINDOW (parent));
+  close_on_lost_focus(GTK_WINDOW (dialog));
   gtk_window_present (GTK_WINDOW (dialog));
 }
 
Index: regolith-control-center/panels/keyboard/cc-keyboard-panel.c
===================================================================
--- regolith-control-center.orig/panels/keyboard/cc-keyboard-panel.c
+++ regolith-control-center/panels/keyboard/cc-keyboard-panel.c
@@ -26,6 +26,7 @@
 
 #include <glib/gi18n.h>
 
+#include "shell/cc-window.h"
 #include "cc-keyboard-panel.h"
 #include "cc-keyboard-resources.h"
 #include "cc-keyboard-shortcut-dialog.h"
@@ -115,6 +116,7 @@ special_chars_activated (AdwActionRow
   dialog = GTK_WINDOW (cc_xkb_modifier_dialog_new (self->input_source_settings, modifier));
 
   gtk_window_set_transient_for (dialog, window);
+  close_on_lost_focus(GTK_WINDOW (dialog));
   gtk_widget_show (GTK_WIDGET (dialog));
 }
 
@@ -131,6 +133,7 @@ keyboard_shortcuts_activated (AdwActionR
 
       shortcut_dialog = cc_keyboard_shortcut_dialog_new ();
       gtk_window_set_transient_for (GTK_WINDOW (shortcut_dialog), window);
+      close_on_lost_focus(GTK_WINDOW (shortcut_dialog));
       gtk_widget_show (GTK_WIDGET (shortcut_dialog));
     }
 }
Index: regolith-control-center/panels/network/cc-network-panel.c
===================================================================
--- regolith-control-center.orig/panels/network/cc-network-panel.c
+++ regolith-control-center/panels/network/cc-network-panel.c
@@ -23,6 +23,7 @@
 #include <glib/gi18n.h>
 #include <stdlib.h>
 
+#include "shell/cc-window.h"
 #include "shell/cc-object-storage.h"
 
 #include "cc-network-panel.h"
@@ -687,6 +688,7 @@ create_connection_cb (GtkWidget      *bu
         editor = net_connection_editor_new (NULL, NULL, NULL, self->client);
         gtk_window_set_transient_for (GTK_WINDOW (editor),
                                       GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
+        close_on_lost_focus(GTK_WINDOW (editor));
         gtk_window_present (GTK_WINDOW (editor));
 }
 
Index: regolith-control-center/panels/network/net-device-ethernet.c
===================================================================
--- regolith-control-center.orig/panels/network/net-device-ethernet.c
+++ regolith-control-center/panels/network/net-device-ethernet.c
@@ -243,6 +243,7 @@ show_details (NetDeviceEthernet *self, G
         gtk_window_set_transient_for (GTK_WINDOW (editor), GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
         if (title)
                 net_connection_editor_set_title (editor, title);
+        close_on_lost_focus(GTK_WINDOW (editor));
         g_signal_connect_object (editor, "done", G_CALLBACK (editor_done), self, G_CONNECT_SWAPPED);
         gtk_window_present (GTK_WINDOW (editor));
 }
@@ -418,6 +419,7 @@ add_profile_button_clicked_cb (NetDevice
 
         editor = net_connection_editor_new (connection, self->device, NULL, self->client);
         gtk_window_set_transient_for (GTK_WINDOW (editor), GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
+        close_on_lost_focus(GTK_WINDOW (editor));
         g_signal_connect_object (editor, "done", G_CALLBACK (editor_done), self, G_CONNECT_SWAPPED);
         gtk_window_present (GTK_WINDOW (editor));
 }
Index: regolith-control-center/panels/network/net-device-wifi.c
===================================================================
--- regolith-control-center.orig/panels/network/net-device-wifi.c
+++ regolith-control-center/panels/network/net-device-wifi.c
@@ -1045,6 +1047,7 @@ show_history (NetDeviceWifi *self)
         adw_preferences_window_set_can_navigate_back (ADW_PREFERENCES_WINDOW (dialog), FALSE);
         native = gtk_widget_get_native (GTK_WIDGET (self));
         gtk_window_set_transient_for (GTK_WINDOW (dialog), GTK_WINDOW (native));
+        close_on_lost_focus(GTK_WINDOW (dialog));
         gtk_window_set_title (GTK_WINDOW (dialog), _("Known Wi-Fi Networks"));
         gtk_window_set_modal (GTK_WINDOW (dialog), TRUE);
         gtk_window_set_default_size (GTK_WINDOW (dialog), 500, 400);
Index: regolith-control-center/panels/network/net-proxy.c
===================================================================
--- regolith-control-center.orig/panels/network/net-proxy.c
+++ regolith-control-center/panels/network/net-proxy.c
@@ -25,6 +25,7 @@
 #include <glib/gi18n.h>
 #include <gio/gio.h>
 
+#include "shell/cc-window.h"
 #include "net-proxy.h"
 
 typedef enum
@@ -186,6 +187,7 @@ static void
 show_dialog_cb (NetProxy *self)
 {
         gtk_window_set_transient_for (GTK_WINDOW (self->dialog), GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
+        close_on_lost_focus(GTK_WINDOW (self->dialog));
         gtk_window_present (GTK_WINDOW (self->dialog));
 }
 
Index: regolith-control-center/panels/network/net-vpn.c
===================================================================
--- regolith-control-center.orig/panels/network/net-vpn.c
+++ regolith-control-center/panels/network/net-vpn.c
@@ -25,6 +25,7 @@
 #include <glib/gi18n.h>
 #include <NetworkManager.h>
 
+#include "shell/cc-window.h"
 #include "panel-common.h"
 
 #include "net-vpn.h"
@@ -150,6 +151,7 @@ edit_connection (NetVpn *self)
 
         editor = net_connection_editor_new (self->connection, NULL, NULL, self->client);
         gtk_window_set_transient_for (GTK_WINDOW (editor), GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
+        close_on_lost_focus(GTK_WINDOW (editor));
         net_connection_editor_set_title (editor, nm_connection_get_id (self->connection));
 
         g_signal_connect_object (editor, "done", G_CALLBACK (editor_done), self, G_CONNECT_SWAPPED);
Index: regolith-control-center/panels/network/wireless-security/ws-file-chooser-button.c
===================================================================
--- regolith-control-center.orig/panels/network/wireless-security/ws-file-chooser-button.c
+++ regolith-control-center/panels/network/wireless-security/ws-file-chooser-button.c
@@ -18,6 +18,7 @@
  * SPDX-License-Identifier: GPL-3.0-or-later
  */
 
+#include "shell/cc-window.h"
 #include "ws-file-chooser-button.h"
 
 #include <glib/gi18n.h>
@@ -118,6 +119,7 @@ ws_file_chooser_button_clicked (GtkButto
   ensure_filechooser (self);
 
   gtk_window_set_transient_for (GTK_WINDOW (self->filechooser), GTK_WINDOW (native));
+  close_on_lost_focus(GTK_WINDOW (self->filechooser));
   gtk_window_present (GTK_WINDOW (self->filechooser));
 }
 
Index: regolith-control-center/panels/power/cc-power-panel.c
===================================================================
--- regolith-control-center.orig/panels/power/cc-power-panel.c
+++ regolith-control-center/panels/power/cc-power-panel.c
@@ -26,6 +26,7 @@
 #include <gnome-settings-daemon/gsd-enums.h>
 #include <gio/gdesktopappinfo.h>
 
+#include "shell/cc-window.h"
 #include "shell/cc-object-storage.h"
 #include "cc-battery-row.h"
 #include "cc-power-profile-row.h"
@@ -618,6 +619,7 @@ automatic_suspend_row_activated_cb (CcPo
   shell = cc_panel_get_shell (CC_PANEL (self));
   toplevel = cc_shell_get_toplevel (shell);
   gtk_window_set_transient_for (GTK_WINDOW (self->automatic_suspend_dialog), GTK_WINDOW (toplevel));
+  close_on_lost_focus(GTK_WINDOW (self->automatic_suspend_dialog));
   gtk_window_set_modal (GTK_WINDOW (self->automatic_suspend_dialog), TRUE);
   gtk_window_present (GTK_WINDOW (self->automatic_suspend_dialog));
 }
Index: regolith-control-center/panels/printers/cc-printers-panel.c
===================================================================
--- regolith-control-center.orig/panels/printers/cc-printers-panel.c
+++ regolith-control-center/panels/printers/cc-printers-panel.c
@@ -18,6 +18,7 @@
 
 #include <config.h>
 
+#include "shell/cc-window.h"
 #include "shell/cc-object-storage.h"
 
 #include "cc-printers-panel.h"
@@ -989,7 +990,7 @@ printer_add_cb (CcPrintersPanel *self)
 
   gtk_window_set_transient_for (GTK_WINDOW (self->pp_new_printer_dialog),
                                             GTK_WINDOW (native));
-
+  close_on_lost_focus(GTK_WINDOW (self->pp_new_printer_dialog));
   gtk_widget_show (GTK_WIDGET (self->pp_new_printer_dialog));
 }
 
Index: regolith-control-center/panels/printers/pp-printer-entry.c
===================================================================
--- regolith-control-center.orig/panels/printers/pp-printer-entry.c
+++ regolith-control-center/panels/printers/pp-printer-entry.c
@@ -19,6 +19,7 @@
 
 #include <config.h>
 
+#include "shell/cc-window.h"
 #include "pp-printer-entry.h"
 #include <gtk/gtk.h>
 #include <glib/gi18n-lib.h>
@@ -399,7 +400,7 @@ on_show_printer_details_dialog (GtkButto
 
   gtk_window_set_transient_for (GTK_WINDOW (dialog),
                                 GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
-
+  close_on_lost_focus(GTK_WINDOW (dialog));
   g_signal_connect (dialog, "response", G_CALLBACK (show_printer_details_response_cb), self);
 
   gtk_window_present (GTK_WINDOW (dialog));
@@ -415,7 +416,7 @@ on_show_printer_options_dialog (GtkButto
 
   gtk_window_set_transient_for (GTK_WINDOW (dialog),
                                 GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
-
+  close_on_lost_focus(GTK_WINDOW (dialog));
   gtk_window_present (GTK_WINDOW (dialog));
 }
 
@@ -583,6 +584,7 @@ pp_printer_entry_show_jobs_dialog (PpPri
       self->pp_jobs_dialog = pp_jobs_dialog_new (self->printer_name);
       g_signal_connect_object (self->pp_jobs_dialog, "response", G_CALLBACK (jobs_dialog_response_cb), self, 0);
       gtk_window_set_transient_for (GTK_WINDOW (self->pp_jobs_dialog), GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
+      close_on_lost_focus(GTK_WINDOW (self->pp_jobs_dialog));
       gtk_window_present (GTK_WINDOW (self->pp_jobs_dialog));
     }
 }
Index: regolith-control-center/panels/region/cc-region-panel.c
===================================================================
--- regolith-control-center.orig/panels/region/cc-region-panel.c
+++ regolith-control-center/panels/region/cc-region-panel.c
@@ -27,6 +27,7 @@
 #include <gtk/gtk.h>
 #include <polkit/polkit.h>
 
+#include "shell/cc-window.h"
 #include "cc-region-panel.h"
 #include "cc-region-resources.h"
 #include "cc-language-chooser.h"
@@ -392,6 +393,7 @@ show_language_chooser (CcRegionPanel  *s
         g_object_set_data (G_OBJECT (chooser), "target", GINT_TO_POINTER (target));
         g_signal_connect_object (chooser, "response",
                                  G_CALLBACK (language_response), self, G_CONNECT_SWAPPED);
+        close_on_lost_focus(GTK_WINDOW (chooser));
         gtk_window_present (GTK_WINDOW (chooser));
 }
 
@@ -453,6 +455,7 @@ show_region_chooser (CcRegionPanel  *sel
         g_object_set_data (G_OBJECT (chooser), "target", GINT_TO_POINTER (target));
         g_signal_connect_object (chooser, "response",
                                  G_CALLBACK (format_response), self, G_CONNECT_SWAPPED);
+        close_on_lost_focus(GTK_WINDOW (chooser));
         gtk_window_present (GTK_WINDOW (chooser));
 }
 
Index: regolith-control-center/panels/removable-media/cc-removable-media-panel.c
===================================================================
--- regolith-control-center.orig/panels/removable-media/cc-removable-media-panel.c
+++ regolith-control-center/panels/removable-media/cc-removable-media-panel.c
@@ -24,6 +24,7 @@
 #include <glib.h>
 #include <glib/gi18n.h>
 
+#include "shell/cc-window.h"
 #include "cc-removable-media-panel.h"
 #include "cc-removable-media-resources.h"
 
@@ -327,6 +328,7 @@ on_extra_options_button_clicked (CcRemov
   GtkWidget *toplevel = cc_shell_get_toplevel (shell);
 
   gtk_window_set_transient_for (GTK_WINDOW (self->other_type_dialog), GTK_WINDOW (toplevel));
+  close_on_lost_focus(GTK_WINDOW (self->other_type_dialog));
   gtk_window_set_modal (GTK_WINDOW (self->other_type_dialog), TRUE);
   gtk_window_set_title (GTK_WINDOW (self->other_type_dialog), _("Other Media"));
   /* update other_application_chooser */
Index: regolith-control-center/panels/sharing/cc-sharing-panel.c
===================================================================
--- regolith-control-center.orig/panels/sharing/cc-sharing-panel.c
+++ regolith-control-center/panels/sharing/cc-sharing-panel.c
@@ -23,6 +23,7 @@
 #include "cc-hostname-entry.h"
 #include "cc-list-row.h"
 
+#include "shell/cc-window.h"
 #include "cc-sharing-resources.h"
 #include "cc-remote-login.h"
 #include "file-share-properties.h"
@@ -244,6 +245,7 @@ remote_desktop_show_encryption_fingerpri
 
   gtk_window_set_transient_for (GTK_WINDOW (self->remote_desktop_fingerprint_dialog),
                                 GTK_WINDOW (self->remote_desktop_dialog));
+  close_on_lost_focus(GTK_WINDOW (self->remote_desktop_fingerprint_dialog));
   gtk_window_present (GTK_WINDOW (self->remote_desktop_fingerprint_dialog));
 }
 
@@ -321,6 +323,7 @@ cc_sharing_panel_run_dialog (CcSharingPa
   parent = cc_shell_get_toplevel (cc_panel_get_shell (CC_PANEL (self)));
 
   gtk_window_set_transient_for (GTK_WINDOW (dialog), GTK_WINDOW (parent));
+  close_on_lost_focus(GTK_WINDOW (dialog));
   gtk_window_present (GTK_WINDOW (dialog));
 }
 
@@ -1444,7 +1447,7 @@ cc_sharing_panel_setup_remote_desktop_di
         }
     }
 
-  if (password == NULL) 
+  if (password == NULL)
     {
       char * pw = pw_generate ();
       if (pw)
Index: regolith-control-center/panels/sound/cc-sound-panel.c
===================================================================
--- regolith-control-center.orig/panels/sound/cc-sound-panel.c
+++ regolith-control-center/panels/sound/cc-sound-panel.c
@@ -30,6 +30,7 @@
 #include <pulse/pulseaudio.h>
 #include <gvc-mixer-control.h>
 
+#include "shell/cc-window.h"
 #include "cc-alert-chooser.h"
 #include "cc-balance-slider.h"
 #include "cc-device-combo-box.h"
@@ -213,6 +214,7 @@ test_output_configuration_button_clicked
 
   dialog = cc_output_test_dialog_new (device, stream);
   gtk_window_set_transient_for (GTK_WINDOW (dialog), GTK_WINDOW (toplevel));
+  close_on_lost_focus(GTK_WINDOW (dialog));
   gtk_window_present (GTK_WINDOW (dialog));
 }
 
Index: regolith-control-center/panels/universal-access/cc-ua-panel.c
===================================================================
--- regolith-control-center.orig/panels/universal-access/cc-ua-panel.c
+++ regolith-control-center/panels/universal-access/cc-ua-panel.c
@@ -27,6 +27,7 @@
 #include <glib/gi18n-lib.h>
 #include <gdesktop-enums.h>
 
+#include "shell/cc-window.h"
 #include "cc-ua-panel.h"
 #include "cc-ua-resources.h"
 #include "cc-cursor-blinking-dialog.h"
@@ -152,6 +153,7 @@ run_dialog (CcUaPanel *self, GtkDialog *
   GtkNative *native = gtk_widget_get_native (GTK_WIDGET (self));
 
   gtk_window_set_transient_for (GTK_WINDOW (dialog), GTK_WINDOW (native));
+  close_on_lost_focus(GTK_WINDOW (dialog));
   gtk_window_present (GTK_WINDOW (dialog));
 }
 
Index: regolith-control-center/panels/user-accounts/cc-add-user-dialog.c
===================================================================
--- regolith-control-center.orig/panels/user-accounts/cc-add-user-dialog.c
+++ regolith-control-center/panels/user-accounts/cc-add-user-dialog.c
@@ -26,6 +26,7 @@
 #include <gtk/gtk.h>
 #include <act/act.h>
 
+#include "shell/cc-window.h"
 #include "cc-add-user-dialog.h"
 #include "cc-realm-manager.h"
 #include "user-utils.h"
@@ -1024,6 +1025,7 @@ join_show_prompt (CcAddUserDialog *self,
 
         g_debug ("Showing admin password dialog");
         gtk_window_set_transient_for (GTK_WINDOW (self->join_dialog), GTK_WINDOW (self));
+        close_on_lost_focus(GTK_WINDOW (self->join_dialog));
         gtk_window_set_modal (GTK_WINDOW (self->join_dialog), TRUE);
         gtk_window_present (GTK_WINDOW (self->join_dialog));
 
Index: regolith-control-center/panels/user-accounts/cc-user-panel.c
===================================================================
--- regolith-control-center.orig/panels/user-accounts/cc-user-panel.c
+++ regolith-control-center/panels/user-accounts/cc-user-panel.c
@@ -43,6 +43,7 @@
 #include <libmalcontent/malcontent.h>
 #endif
 
+#include "shell/cc-window.h"
 #include "cc-add-user-dialog.h"
 #include "cc-avatar-chooser.h"
 #include "cc-language-chooser.h"
@@ -337,7 +338,7 @@ add_user (CcUserPanel *self)
         dialog = cc_add_user_dialog_new (self->permission);
         toplevel = GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self)));
         gtk_window_set_transient_for (GTK_WINDOW (dialog), toplevel);
-
+        close_on_lost_focus(GTK_WINDOW (dialog));
         gtk_window_present (GTK_WINDOW (dialog));
         g_signal_connect_object (dialog, "response", G_CALLBACK (on_add_user_dialog_response),
                                  self, G_CONNECT_SWAPPED);
@@ -1100,7 +1101,7 @@ change_language (CcUserPanel *self)
                 self->language_chooser = cc_language_chooser_new ();
                 gtk_window_set_transient_for (GTK_WINDOW (self->language_chooser),
                                               GTK_WINDOW (gtk_widget_get_native (GTK_WIDGET (self))));
-
+                close_on_lost_focus(GTK_WINDOW (self->language_chooser));
                 g_signal_connect_object (self->language_chooser, "response",
                                          G_CALLBACK (language_response), self, G_CONNECT_SWAPPED);
         }
@@ -1122,7 +1123,7 @@ change_password (CcUserPanel *self)
 
         parent = (GtkWindow *) gtk_widget_get_native (GTK_WIDGET (self));
         gtk_window_set_transient_for (GTK_WINDOW (dialog), parent);
-
+        close_on_lost_focus(GTK_WINDOW (dialog));
         gtk_window_present (GTK_WINDOW (dialog));
 }
 
@@ -1140,6 +1141,7 @@ change_fingerprint (CcUserPanel *self)
 
         dialog = cc_fingerprint_dialog_new (self->fingerprint_manager);
         gtk_window_set_transient_for (GTK_WINDOW (dialog), parent);
+        close_on_lost_focus(GTK_WINDOW (dialog));
         gtk_window_present (GTK_WINDOW (dialog));
 }
 
@@ -1155,7 +1157,7 @@ show_history (CcUserPanel *self)
 
         parent = (GtkWindow *) gtk_widget_get_native (GTK_WIDGET (self));
         gtk_window_set_transient_for (GTK_WINDOW (dialog), parent);
-
+        close_on_lost_focus(GTK_WINDOW (dialog));
         gtk_window_present (GTK_WINDOW (dialog));
 }
 
